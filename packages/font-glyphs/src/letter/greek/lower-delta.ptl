$$include '../../meta/macros.ptl'

import [mix linreg clamp fallback] from "@iosevka/util"

glyph-module

glyph-block Letter-Greek-Lower-Delta : begin
	glyph-block-import CommonShapes
	glyph-block-import Common-Derivatives
	glyph-block-import Letter-Shared : CreateTurnedLetter

	create-glyph 'grek/delta.rounded' : glyph-proc
		include : MarkSet.b

		local yRingTop : Ascender * 0.619 + QuarterStroke
		local xNeck   : mix SB RightSB 0.06

		include : dispiro
			g4   [mix Middle RightSB 0.85] [mix XH Ascender 0.8] [widths.lhs]
			alsoThru 0.5 0.7
			g4   Middle (Ascender - O)
			archv 2
			g4   (xNeck + Stroke) [mix (Ascender - O - Stroke) yRingTop 0.5] [widths.rhs]
			arcvh 2
			g4   Middle yRingTop [heading Rightward]
			alsoThruThem : list {0.25 0.05} {0.5 0.13}
			flatside.rd RightSB 0 yRingTop SmallArchDepthA SmallArchDepthB
			arch.rhs 0
			flatside.lu SB 0 yRingTop SmallArchDepthA SmallArchDepthB
			arcvh
			g4   Middle (yRingTop - QuarterStroke) [widths.rhs HalfStroke]

	create-glyph 'grek/delta.flatTop' : glyph-proc
		include : MarkSet.b

		local yTop : Ascender - Stroke
		local yMid : XH * 0.875 + QuarterStroke
		local yMid2 : YSmoothMidR yMid 0 SmallArchDepthA SmallArchDepthB
		local yMockBarStart : [mix yMid2 yMid 0.5] + 2.25 * Stroke
		local pStraightBarStart : 0.75 - (Stroke / Ascender)

		include : HBar.t SB RightSB Ascender
		include : intersection [MaskBelow yTop] : dispiro
			widths.lhs ShoulderFine
			flatside.ru (RightSB - [HSwToV : Stroke - ShoulderFine]) 0 yMid SmallArchDepthA SmallArchDepthB
			arch.lhs yMid (swBefore -- ShoulderFine)
			flatside.ld SB 0 yMid SmallArchDepthA SmallArchDepthB
			arch.lhs 0
			flat (RightSB - OX) [Math.min SmallArchDepthA yMid2]
			curl (RightSB - OX) [mix yMid2 yMid 0.05]
			flat [mix Width SB pStraightBarStart] [mix yMockBarStart yTop pStraightBarStart]
			curl [mix Width SB 1]                 [mix yMockBarStart yTop 1] [widths.rhs]

	select-variant 'grek/delta' 0x3B4

	alias 'cyrl/be.SRB' null 'grek/delta.rounded'
	alias 'latindelta' 0x1E9F 'grek/delta'

	CreateTurnedLetter 'turndelta' 0x18D 'grek/delta' HalfAdvance (XH / 2)
