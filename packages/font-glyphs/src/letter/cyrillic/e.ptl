$$include '../../meta/macros.ptl'

import [mix linreg clamp fallback] from "@iosevka/util"

glyph-module

glyph-block Letter-Cyrillic-E : begin
	glyph-block-import CommonShapes
	glyph-block-import Common-Derivatives
	glyph-block-import Letter-Latin-C : CLetterForm CConfig
	glyph-block-import Letter-Cyrillic-Iotified-A : Iotified
	glyph-block-import Letter-Latin-Upper-F : EFVJutLength

	foreach { suffix { sty styBot fMidSerif } } [Object.entries CConfig] : do
		define [CyrlEShepe df top ada adb] : glyph-proc
			local lf : CLetterForm df sty styBot top 0
				ada -- ada
				adb -- adb
			include : lf.revFull

			local xCenterBarLeft : mix df.leftSB df.rightSB 0.35
			local mbSw : AdviceStroke2 2 3 top
			include : HBar.m xCenterBarLeft df.rightSB (top / 2) mbSw

			if fMidSerif : begin
				local { jutTop jutBot jutMid } : EFVJutLength (top - 2 * DToothlessRise) 0.5 mbSw
				local vJutSw : VJutStroke * mbSw / Stroke
				include : VBar.m xCenterBarLeft (top / 2 - jutMid) (top / 2 + jutMid) vJutSw

		create-glyph "cyrl/E.\(suffix)" : glyph-proc
			include : MarkSet.capital
			include : CyrlEShepe [DivFrame 1] CAP ArchDepthA ArchDepthB

		create-glyph "cyrl/e.\(suffix)" : glyph-proc
			include : MarkSet.e
			set-base-anchor 'cvDecompose' 0 0
			include : CyrlEShepe [DivFrame 1] XH SmallArchDepthA SmallArchDepthB

		define [CyrlYeShape df top ada adb] : glyph-proc
			local lf : CLetterForm df sty styBot top 0
				ada -- ada
				adb -- adb
			include : lf.full

			local xCenterBarRight : mix df.rightSB df.leftSB 0.35
			local mbSw : AdviceStroke2 2 3 top
			include : HBar.m df.leftSB xCenterBarRight (top / 2) mbSw

			if fMidSerif : begin
				local { jutTop jutBot jutMid } : EFVJutLength (top - 2 * DToothlessRise) 0.5 mbSw
				local vJutSw : VJutStroke * mbSw / Stroke
				include : VBar.m xCenterBarRight (top / 2 - jutMid) (top / 2 + jutMid) vJutSw

		create-glyph "cyrl/Ye.\(suffix)" : glyph-proc
			include : MarkSet.capital
			include : CyrlYeShape [DivFrame 1] CAP ArchDepthA ArchDepthB

		create-glyph "cyrl/ye.\(suffix)" : glyph-proc
			include : MarkSet.e
			set-base-anchor 'cvDecompose' 0 0
			include : CyrlYeShape [DivFrame 1] XH SmallArchDepthA SmallArchDepthB

		define [IotifiedEShape fCapital df top ada adb] : glyph-proc
			local gap : 0.375 * (df.width - 2 * df.leftSB - 2.5 * df.mvs) - [HSwToV : 0.25 * df.mvs]
			define divSub : (df.width - gap - df.mvs) / Width
			define dfSub : DivFrame divSub 2

			local lf : CLetterForm dfSub sty styBot top 0
				ada -- (ada * 0.7 * df.adws)
				adb -- (adb * 0.7 * df.adws)
				sw  -- df.mvs
			include : with-transform [ApparentTranslate (Width * (df.adws - divSub)) 0] : lf.full

			local xCenterBarRight : mix df.leftSB df.rightSB (3 / 4)
			include : Iotified.full df top
				hBarRight -- xCenterBarRight
				hBarY     -- (top / 2)
				fCapital  -- fCapital

			if fMidSerif : begin
				local { jutTop jutBot jutMid } : EFVJutLength (top - 2 * DToothlessRise) 0.5 df.mvs
				local vJutSw : VJutStroke * df.mvs / Stroke
				include : VBar.m xCenterBarRight (top / 2 - jutMid) (top / 2 + jutMid) vJutSw

		create-glyph "cyrl/EIotified.\(suffix)" : glyph-proc
			local df : include : DivFrame para.advanceScaleM 3
			include : df.markSet.capital
			include : IotifiedEShape true df CAP ArchDepthA ArchDepthB

		create-glyph "cyrl/eIotified.\(suffix)" : glyph-proc
			local df : include : DivFrame para.advanceScaleM 3
			include : df.markSet.e
			include : IotifiedEShape false df XH SmallArchDepthA SmallArchDepthB

	select-variant 'cyrl/E'  0x42D
	select-variant 'cyrl/e'  0x44D
	select-variant 'cyrl/Ye' 0x404
	select-variant 'cyrl/ye' 0x454
	select-variant "cyrl/EIotified" 0x464 (follow -- 'cyrl/Ye')
	select-variant "cyrl/eIotified" 0x465 (follow -- 'cyrl/ye')
